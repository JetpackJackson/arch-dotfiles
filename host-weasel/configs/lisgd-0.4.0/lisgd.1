.TH LISGD 1

.SH NAME
lisgd \- libinput synthetic gesture daemon

.SH SYNOPSIS
.B lisgd
[\fB\-d\fR \fIdevicepath\fR]
[\fB\-g\fR \fIgesturespec\fR]...
[\fB\-t\fR \fIthreshold\fR]
[\fB\-m\fR \fItimeoutms\fR]
[\fB\-o\fR \fIorientation\fR]
[\fB\-w\fR \fIwidth\fR]
[\fB\-h\fR \fIheight\fR]
[\fB\-r\fR \fIdegreesofleniency\fR]
[\fB\-v]


.SH DESCRIPTION
.B lisgd
(or libinput synthetic gesture daemon) lets you bind gestures based on
libinput touch events to run specific commands to execute. For example,
dragging left to right with one finger could execute a particular command
like launching a terminal. Directional L-R, R-L, U-D, and D-U gestures and
diagnol LD-RU, RD-LU, UR-DL, UL-DR gestures are supported with 1 through
n fingers and can be bound to the screen's edges and/or made sensitive to
the distance of the gesture.

Unlike other libinput gesture daemons, lisgd uses touch events to
recognize synthetic swipe gestures rather than using the libinput's
gesture events. The advantage of this is that the synthetic gestures
you define via lisgd can be used on touchscreens, which normal libinput
gestures don't support.

This program was built for use on the Pinephone however it could be used in
general for any device that supports touch events, like laptop touchscreens
or similar. You may want to adjust the threshold depending on the device
you're using.


.SH OPTIONS
.TP
.BR \-d ", " \-d\ devicepath\fR
Path of the dev filesystem device to monitor (like /dev/input/event1).

.TP
.BR \-g ", " \-g\ nfingers,gesture,edge,distance,actmode,command\fR
Allows you to bind a gesture wherein nfingers is an integer, gesture is
one of {LR,RL,DU,UD,DLUR,DRUL,URDL,ULDR}, edge is one of * (any), N (none), L
(left), R (right), T (top), B (bottom), TL (top left), TR (top right), BL
(bottom left), BR (bottom right) and distance is one of * (any), S (short), M
(medium), L (large), actmode is R (release) for normal mode and P (pressed) for
pressed mode (but this field may be omitted entirely for backward
compatibility), command is the shell command to be executed.

The -g option can be used multiple times to bind multiple gestures.

.TP
.BR \-m ", " \-m\ timeoutms\fR
Number of milliseconds gestures must be performed within to be registered. After
the timeoutms value; the gesture won't be registered.

.TP
.BR \-o ", " \-o\ orientation\fR
Number of 90-degree rotations to translate gestures by. Can be set to 0-3. For
example using 1; a L-R gesture would become a U-D gesture. Meant to be used
for screen-rotation.

.TP
.BR \-r ", " \-r\ degreesofleniency\fR
Number of degrees offset each 45-degree interval may still be recognized within.
Maximum value is 45. Default value is 15. E.g. U-D is a 180 degree gesture
but with 15 degrees of leniency will be recognized between 165-195 degrees.

.TP
.BR \-t ", " \-t\ distancethreshold\fR
Threshold in libinput units (pixels) after which a gesture registers. Defaults
to 125.

.TP
.BR \-T ", " \-T\ distancethreshold_pressed\fR
Threshold in libinput units (pixels) after which a gesture registers when fingers
are not lifted. Defaults to 60.

.TP
.BR \-w ", " \-w\ screnwidth\fR
Allows you to specify the width of the screen area to be used for
edge-based gestures. Should be used in conjunction with -h. If unset,
and either the DISPLAY or WAYLAND_DISPLAY env var is set, X/Wayland
dynamic screen geometry detection will be used instead.

.TP
.BR \-h ", " \-h\ screenheight\fR
Allows you to specify the height of the screen area to be used for
edge-based gestures. Should be used in conjunction with -w. If unset,
and either the DISPLAY or WAYLAND_DISPLAY env var is set, X/Wayland
dynamic screen geometry detection will be used instead.

.TP
.BR \-s ", " \-s\ edgessizecaling\fR
Scale the edge sizes with this value. It is very usefull with very hidpi screens,
to help detecting edge gestures.

.TP
.BR \-v \fR
Enables verbose mode which prints debugging messages.


.SH SEE ALSO
lisgd was built as part of Sxmo; an project to create a Pinephone UI out of
simple and suckless programs. See: http://sr.ht/mil/Sxmo

.SH AUTHOR
.BR lisgd
is written by Miles Alan <m@milesalan.com>

.SH CONTRIBUTING
Bugs and feature dicussions can be sent to ~mil/sxmo-devel@lists.sr.ht
