#!/bin/sh

# This is the example configuration file for river.
#
# If you wish to edit this, you will probably want to copy it to
# $XDG_CONFIG_HOME/river/init or $HOME/.config/river/init first.
#
# See the river(1), riverctl(1), and rivertile(1) man pages for complete
# documentation.

# Note: the "Super" modifier is also known as Logo, GUI, Windows, Mod4, etc.

# Super+Shift+Return to start an instance of foot (https://codeberg.org/dnkl/foot)
riverctl map normal Super Return spawn foot

# Super+Q to close the focused view
riverctl map normal Super+Shift Q close

# Super+Shift+E to exit river
riverctl map normal Super+Shift E exit

# Super+J and Super+K to focus the next/previous view in the layout stack
riverctl map normal Super Down focus-view next
riverctl map normal Super Up focus-view previous

# Super+Shift+J and Super+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal Super+Shift Down swap next
riverctl map normal Super+Shift Up swap previous

# Super+Period and Super+Comma to focus the next/previous output
riverctl map normal Super Period focus-output next
riverctl map normal Super Comma focus-output previous

# Super+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal Super+Shift Period send-to-output next
riverctl map normal Super+Shift Comma send-to-output previous

# Super+Return to bump the focused view to the top of the layout stack
riverctl map normal Super+Alt Return zoom

# Super+H and Super+L to decrease/increase the main ratio of rivertile(1)
riverctl map normal Super Left send-layout-cmd rivertile "main-ratio -0.05"
riverctl map normal Super Right send-layout-cmd rivertile "main-ratio +0.05"

# Super+Shift+H and Super+Shift+L to increment/decrement the main count of rivertile(1)
riverctl map normal Super+Shift Left send-layout-cmd rivertile "main-count +1"
riverctl map normal Super+Shift Right send-layout-cmd rivertile "main-count -1"

# Super+Alt+{H,J,K,L} to move views
riverctl map normal Super+Alt Left move left 100
riverctl map normal Super+Alt Down move down 100
riverctl map normal Super+Alt Up move up 100
riverctl map normal Super+Alt Right move right 100

# Super+Alt+Control+{H,J,K,L} to snap views to screen edges
riverctl map normal Super+Alt+Control Left snap left
riverctl map normal Super+Alt+Control Down snap down
riverctl map normal Super+Alt+Control Up snap up
riverctl map normal Super+Alt+Control Right snap right

# Super+Alt+Shift+{H,J,K,L} to resize views
riverctl map normal Super+Alt+Shift Left resize horizontal -100
riverctl map normal Super+Alt+Shift Down resize vertical 100
riverctl map normal Super+Alt+Shift Up resize vertical -100
riverctl map normal Super+Alt+Shift Right resize horizontal 100

# Super + Left Mouse Button to move views
riverctl map-pointer normal Super BTN_LEFT move-view

# Super + Right Mouse Button to resize views
riverctl map-pointer normal Super BTN_RIGHT resize-view

# Super + Middle Mouse Button to toggle float
riverctl map-pointer normal Super BTN_MIDDLE toggle-float

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # Super+[1-9] to focus tag [0-8]
    riverctl map normal Super $i set-focused-tags $tags

    # Super+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal Super+Shift $i set-view-tags $tags

    # Super+Control+[1-9] to toggle focus of tag [0-8]
    riverctl map normal Super+Control $i toggle-focused-tags $tags

    # Super+Shift+Control+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal Super+Shift+Control $i toggle-view-tags $tags
done

# Super+0 to focus all tags
# Super+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal Super 0 set-focused-tags $all_tags
riverctl map normal Super+Shift 0 set-view-tags $all_tags

# Super+Space to toggle float
riverctl map normal Super Space toggle-float

# Super+F to toggle fullscreen
riverctl map normal Super F toggle-fullscreen

# Super+{Up,Right,Down,Left} to change layout orientation
riverctl map normal Super H    send-layout-cmd rivertile "main-location top"
riverctl map normal Super L send-layout-cmd rivertile "main-location right"
riverctl map normal Super J  send-layout-cmd rivertile "main-location bottom"
riverctl map normal Super K  send-layout-cmd rivertile "main-location left"

#riverctl map normal Super P spawn "grim && notify-send -t 2000 'Screenshot taken'"
riverctl map normal Super P spawn "grim ~/pics/screenshots/primary_$(date +'%Y%m%d%H%M%S').png && notify-send 'screenshot taken'"

riverctl map normal Super R spawn "foot -a launcher -e sway-launcher-desktop"
riverctl map normal Super C spawn "slurp | grim -g - - | swappy -f -"
riverctl map normal Super X spawn "foot -a launcher -e clipman pick --print0 --tool=CUSTOM --tool-args=\"fzf --cycle --read0\""

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Super+F11 to enter passthrough mode
riverctl map normal Super F11 enter-mode passthrough

# Super+F11 to return to normal mode
riverctl map passthrough Super F11 enter-mode normal

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked
do
    # Eject the optical drive (well if you still have one that is)
    riverctl map $mode None XF86Eject spawn 'eject -T'

    # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
    riverctl map $mode None XF86AudioRaiseVolume  spawn 'pactl set-sink-volume @DEFAULT_SINK@ +10%'
    riverctl map $mode None XF86AudioLowerVolume  spawn 'pactl set-sink-volume @DEFAULT_SINK@ -10%'
    riverctl map $mode None XF86AudioMute         spawn 'pactl set-sink-mute @DEFAULT_SINK@ toggle'

    # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
    #riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPlay  spawn 'mpc toggle'
    riverctl map $mode None XF86AudioPrev  spawn 'mpc prev'
    riverctl map $mode None XF86AudioNext  spawn 'mpc next'

    # Control screen backlight brightness with brightnessctl (https://github.com/Hummer12007/brightnessctl)
    riverctl map $mode None XF86MonBrightnessUp   spawn 'brightnessctl set +5%'
    riverctl map $mode None XF86MonBrightnessDown spawn 'brightnessctl set 5%-'

done

# Set background and border color
riverctl background-color 0x002b36
riverctl border-color-focused 0x93a1a1
riverctl border-color-unfocused 0x586e75

# Set keyboard repeat rate
riverctl set-repeat 50 300

# Make all views with an app-id that starts with "float" and title "foo" start floating.
#riverctl rule-add -app-id 'float*' -title 'foo' float
riverctl rule-add -app-id 'launcher*' float

# Make all views with app-id "bar" and any title use client-side decorations
#riverctl rule-add -app-id "bar" csd

riverctl input pointer-1739-52856-SYNA2BA6:00_06CB:CE78_Touchpad tap enabled
riverctl input pointer-1739-52856-SYNA2BA6:00_06CB:CE78_Touchpad natural-scroll enabled
riverctl focus-follows-cursor normal

riverctl spawn "dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=river"
riverctl spawn "swaybg -i /home/jet/pics/wallpapers/temple-of-ah.jpg"
riverctl spawn "mako"
riverctl spawn "wl-paste -t text --watch clipman store -P"
riverctl spawn "wl-paste -p -t text --watch clipman store -P --histpath=/home/jet/.local/share/clipman-primary.json"
riverctl spawn "rot8 --hooks 'killall lisgd; lisgd &'"
riverctl spawn "yambar -c /home/jet/.config/yambar/config-river.yml"
riverctl spawn "wlr-randr --output eDP-1 --scale 1.5"

# Set the default layout generator to be rivertile and start it.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivertile
rivertile -view-padding 3 -outer-padding 3 &
