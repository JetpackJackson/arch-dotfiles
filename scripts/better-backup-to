#!/usr/bin/env bash

# requires rsync

choice=0
review=0
flag=0

dryVerboseBackup="create --exclude-from /home/jet/docs/notes/paclist/borg-list.txt --exclude-caches --list -n /run/media/jet/$1/borg-sharky::{hostname}-{now:%Y-%m-%d_%H:%M:%S} /home/jet/$2"
realVerboseBackup="create --exclude-from /home/jet/docs/notes/paclist/borg-list.txt --exclude-caches --list --filter=ACME /run/media/jet/$1/borg-sharky::{hostname}-{now:%Y-%m-%d_%H:%M:%S} /home/jet/$2"

dry2VerboseBackup="create --exclude-from /home/jet/docs/notes/paclist/borg-list.txt --exclude-caches --list -n /run/media/jet/$1/borg-sharky::{hostname}-{now:%Y-%m-%d_%H:%M:%S} /home/jet/$2"
real2VerboseBackup="create --exclude-from /home/jet/docs/notes/paclist/borg-list.txt --exclude-caches --progress --filter=ACME /run/media/jet/$1/borg-sharky::{hostname}-{now:%Y-%m-%d_%H:%M:%S} /home/jet/$2"

backup() {
    echo "1: Review and backup (verbose)"
    echo $(<$XDG_DOCUMENTS_DIR/notes/paclist/borg-list.txt)
    echo "2: Review and backup (progress)"
    echo $(<$XDG_DOCUMENTS_DIR/notes/paclist/borg-list.txt)
    echo "3: View progress of writeback"
    echo "4: test"
    read choice
    case "$choice" in
        1) borg $dryVerboseBackup
           echo "Continue with backup? [y/n] "
           read review
           if [[ $review == "y" ]]
           then
               borg $realVerboseBackup
           else
               echo "Exiting."
           fi
        ;;
        2) borg $dry2VerboseBackup
           echo "Continue with backup? [y/n] "
           read review
           if [[ $review == "y" ]]
           then
               borg $real2VerboseBackup
           else
               echo "Exiting."
           fi
        ;;
        3) watch -d grep -e Dirty: -e Writeback: /proc/meminfo
        ;;
        4) if [[ $flag -eq 0 ]]; then
              borg $dry2VerboseBackup
              flag=1
           fi
           echo "Continue with backup? [y/n] "
           read review
           if [[ $review == "y" ]]
           then
               borg $real2VerboseBackup
           else
               echo "Exiting."
           fi
        ;;
        *) echo "Exiting."
        ;;
    esac
    sudo rsync -aAXHvu --delete /home/jet/.cache/borg /run/media/jet/$1/sharky/.cache
    sudo rsync -aAXHvu --delete /home/jet/.config/borg /run/media/jet/$1/sharky/.config
    sudo rsync -aAXHvu --delete /home/jet/.ssh /run/media/jet/$1/sharky/

}

checkMount() {
    if grep -qs '/run/media/jet/'$1' ' /proc/mounts; then
        echo "Drive '$1' is mounted."
        backup "$1" "$2"
    else
        echo "Drive '$1' is not mounted."
    fi
}

checkMount "$1" "$2"

