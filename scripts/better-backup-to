#!/usr/bin/env bash

# requires rsync

choice=0
review=0
flag=0

dryVerboseBackup="-aAXHvun --delete --exclude-from=$XDG_DOCUMENTS_DIR/notes/paclist/rsync-list.txt /home/jet/"$2"/ /run/media/jet/"$1"/sharky/home/jet/"$2"/"

realVerboseBackup="-aAXHvu --delete --exclude-from=$XDG_DOCUMENTS_DIR/notes/paclist/rsync-list.txt /home/jet/"$2"/ /run/media/jet/"$1"/sharky/home/jet/"$2"/"

dry2VerboseBackup="-aAXHvun --delete --exclude-from=$XDG_DOCUMENTS_DIR/notes/paclist/rsync-list2.txt /home/jet/"$2"/ /run/media/jet/"$1"/sharky/home/jet/"$2"/"

real2VerboseBackup="-aAXHvu --delete --exclude-from=$XDG_DOCUMENTS_DIR/notes/paclist/rsync-list2.txt /home/jet/"$2"/ /run/media/jet/"$1"/sharky/home/jet/"$2"/"

backup() {
    echo "1: Review and backup (verbose)"
    echo $(<$XDG_DOCUMENTS_DIR/notes/paclist/rsync-list.txt)
    echo "2: Review and backup (exclude more stuff)"
    echo $(<$XDG_DOCUMENTS_DIR/notes/paclist/rsync-list2.txt)
    echo "3: View progress of writeback"
    echo "4: test"
    read choice
    case "$choice" in
        1) sudo rsync $dryVerboseBackup
           echo "Continue with backup? [y/n] "
           read review
           if [[ $review == "y" ]]
           then
               sudo rsync $realVerboseBackup
           else
               echo "Exiting."
           fi
        ;;
        2) sudo rsync $dry2VerboseBackup
           echo "Continue with backup? [y/n] "
           read review
           if [[ $review == "y" ]]
           then
               sudo rsync $real2VerboseBackup
           else
               echo "Exiting."
           fi
        ;;
        3) watch -d grep -e Dirty: -e Writeback: /proc/meminfo
        ;;
        4) if [[ $flag -eq 0 ]]; then
              sudo rsync $dry2VerboseBackup
              flag=1
           fi
           #while true; do
           #    if read -r -N 1 -t 5; then
           #        break
           #    fi
           #done
#           while :; do
#               sudo rsync $dry2VerboseBackup
#               # Check for ENTER keypress and, after clearing the input buffer
#               # with a dummy `read`, exit the loop.
#               read -t 0 -r -N 1 && { read -r; break; }
#           done
           echo "Continue with backup? [y/n] "
           read review
           if [[ $review == "y" ]]
           then
               sudo rsync $real2VerboseBackup
           else
               echo "Exiting."
           fi
        ;;
        *) echo "Exiting."
        ;;
    esac

}

checkMount() {
    if grep -qs '/run/media/jet/'$1' ' /proc/mounts; then
        echo "Drive '$1' is mounted."
        backup "$1" "$2"
    else
        echo "Drive '$1' is not mounted."
    fi
}

checkMount "$1" "$2"
